# section divider
snippet section "section divider" b
@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
@ $1


endsnippet


# new function
snippet fn "new function" b
@@@ ${1:foo} @@@
@ params:
@   ${2:none}
@ return:
@   ${3:none}
.type $1 %function
$1:
	stmdb sp!, {fp, lr}

	${4:@ TODO:}

	bx lr
	ldmia sp!, {fp, lr}
.size $1, .-$1


endsnippet


# n-bytes of blank data
snippet re "n-bytes of blank data" b
$1
.rept ${2:1000}
.byte 0
.endr

endsnippet


### LOAD AND STORE ###

# ldmia sp!, { ... }
snippet ldmia "ldmia sp!, { ... }" b
ldmia sp!, {${1:fp, lr}}

endsnippet

# stmdb sp!, { ... }
snippet stmdb "stmdb sp!, { ... }" b
stmdb sp!, {${1:fp, lr}}

endsnippet

# ldmdb sp!, { ... }
snippet ldmdb "ldmdb sp!, { ... }" b
ldmdb sp!, {$1}

endsnippet

# stmia sp!, { ... }
snippet stmia "stmia sp!, { ... }" b
stmia sp!, {${1}

endsnippet

# push { ... }
snippet push "push { ... }" bA
push {${1}}

endsnippet

# pop { ... }
snippet pop "pop { ... }" bA
pop {${1}}

endsnippet

# ldr $1, [$2]
snippet ldr "ldr $1, [$2]" bA
ldr $1, [$2]

endsnippet

# str $1, [$2]
snippet str "str $1, [$2]" bA
str $1, [$2]

endsnippet
